plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}

android {

    namespace 'com.termux'
    compileSdk 34
    ndkVersion = '26.1.10909125'
    lintOptions {
        abortOnError false
    }
    dependencies {}
    defaultConfig {

        externalNativeBuild {
            ndkBuild {
                cFlags '-std=c11', '-Wall', '-Wextra', '-Werror', '-Os', '-fno-stack-protector', '-Wl,--gc-sections', '-fvisibility=hidden', '-O3'
            }
        }

        applicationId 'com.termux'
        minSdk 28
        targetSdk 28
        versionCode 118
        versionName '0.118.0'
        resourceConfigurations += ['en', 'xhdpi']

        splits {
            abi {
                enable(true)
                reset()
                include 'x86_64', 'armeabi-v7a', 'arm64-v8a'
                universalApk false
            }
        }
        versionNameSuffix '.wear'
    }

    externalNativeBuild {
        ndkBuild {
            path 'src/main/jni/Android.mk'
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles 'proguard-rules.pro'
            debuggable false
            jniDebuggable false
            renderscriptDebuggable false
            pseudoLocalesEnabled false
            crunchPngs true
        }

    }

    compileOptions {
        // Flag to enable support for the new language APIs
        coreLibraryDesugaringEnabled false

        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    packagingOptions {
        jniLibs {
            useLegacyPackaging false
        }
        resources {
            excludes += ['/META-INF/**']
        }
    }
    kotlinOptions {
        jvmTarget = '17'
    }
    applicationVariants.configureEach { final variant ->
        variant.outputs.configureEach { final output ->
            final def abi = output.getFilter('ABI')
            outputFileName = new File('nyx_' + variant.buildType.name + '_' + (abi ? abi : 'universal') + '.apk')
        }
    }

}
